{"mappings":"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","sources":["src/js/index.js"],"sourcesContent":["class DrawingBoard {\n  MODE = \"NONE\"; // NONE BRUSH ERASER\n  isMouseDown = false;\n  eraserColor = \"#FFFFFF\";\n  backgroundColor = \"#FFFFFF\";\n\n  constructor() {\n    this.assignElement();\n    this.initContext();\n    this.initCanvasBackgroundColor();\n    this.addEvent();\n  }\n\n  assignElement() {\n    this.containerEl = document.getElementById(\"container\");\n    this.canvasEl = this.containerEl.querySelector(\"#canvas\");\n    this.toolbarEl = this.containerEl.querySelector(\"#toolbar\");\n    this.brushEl = this.toolbarEl.querySelector(\"#brush\");\n    this.colorPickerEl = this.toolbarEl.querySelector(\"#colorPicker\");\n    this.brushPannelEl = this.containerEl.querySelector(\"#brushpannel\");\n    this.brushSize = this.brushPannelEl.querySelector(\"#brushSize\");\n    this.brushSizePreviewEl =\n      this.brushPannelEl.querySelector(\"#brushSizePreview\");\n    this.eraserEl = this.toolbarEl.querySelector(\"#eraser\");\n    this.navigatorEl = this.toolbarEl.querySelector(\"#navigator\");\n    this.navigatorImageContainerEl = this.containerEl.querySelector(\"#imgNav\");\n    this.navigatorImageEl =\n      this.navigatorImageContainerEl.querySelector(\"#canvasImg\");\n  }\n\n  initContext() {\n    this.context = this.canvasEl.getContext(\"2d\");\n  }\n\n  initCanvasBackgroundColor() {\n    this.context.fillStyle = this.backgroundColor;\n    this.context.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n  }\n\n  addEvent() {\n    this.brushEl.addEventListener(\"click\", this.onClickBrush.bind(this));\n    this.canvasEl.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n    this.canvasEl.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\n    this.canvasEl.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\n    this.canvasEl.addEventListener(\"mouseout\", this.onMouseOut.bind(this));\n    this.brushSize.addEventListener(\"input\", this.onChangeBrushSize.bind(this));\n    this.colorPickerEl.addEventListener(\"input\", this.onChangeColor.bind(this));\n    this.eraserEl.addEventListener(\"click\", this.onClickEraser.bind(this));\n    this.navigatorEl.addEventListener(\n      \"click\",\n      this.onClickNavigator.bind(this)\n    );\n  }\n\n  onClickNavigator(event) {\n    this.isNavigatorVisible = !event.currentTarget.classList.contains(\"active\");\n    event.currentTarget.classList.toggle(\"active\");\n    this.navigatorImageContainerEl.classList.toggle(\"hide\");\n    this.updateNavigator();\n  }\n\n  updateNavigator() {\n    if (!this.isNavigatorVisible) return;\n    this.navigatorImageEl.src = this.canvasEl.toDataURL();\n  }\n\n  onClickEraser(event) {\n    const isActive = event.currentTarget.classList.contains(\"active\");\n    // brush div 안에 i 태그가 눌릴 수 있으니까 currentTarget으로 찾기.\n    this.MODE = isActive ? \"NONE\" : \"ERASER\";\n    this.canvasEl.style.cursor = isActive ? \"default\" : \"crosshair\";\n    this.brushPannelEl.classList.add(\"hide\");\n    event.currentTarget.classList.toggle(\"active\");\n    this.brushEl.classList.remove(\"active\");\n  }\n\n  onMouseOut() {\n    if (this.MODE === \"NONE\") return;\n    this.isMouseDown = false;\n    this.updateNavigator();\n  }\n\n  onChangeColor(event) {\n    this.brushSizePreviewEl.style.background = event.target.value;\n  }\n\n  onChangeBrushSize(event) {\n    this.brushSizePreviewEl.style.width = `${event.target.value}px`;\n    this.brushSizePreviewEl.style.height = `${event.target.value}px`;\n  }\n\n  onMouseDown(event) {\n    if (this.MODE === \"NONE\") return;\n    this.isMouseDown = true;\n    const currentPosition = this.getMousePosition(event);\n    this.context.beginPath();\n    this.context.moveTo(currentPosition.x, currentPosition.y);\n    this.context.lineCap = \"round\";\n    if (this.MODE === \"BRUSH\") {\n      this.context.strokeStyle = this.colorPickerEl.value;\n      this.context.lineWidth = this.brushSize.value;\n    } else if (this.MODE === \"ERASER\") {\n      this.context.strokeStyle = this.eraserColor;\n      this.context.lineWidth = 50;\n    }\n  }\n\n  onMouseMove(event) {\n    // 마우스가 다운된 상태가 아니라면 동작 멈춰.\n    if (!this.isMouseDown) return;\n    const currentPosition = this.getMousePosition(event);\n    this.context.lineTo(currentPosition.x, currentPosition.y);\n    this.context.stroke();\n  }\n\n  onMouseUp() {\n    if (this.MODE === \"NONE\") return;\n    this.isMouseDown = false;\n    this.updateNavigator();\n  }\n\n  getMousePosition(event) {\n    const boundaries = this.canvasEl.getBoundingClientRect();\n    return {\n      x: event.clientX - boundaries.left,\n      y: event.clientY - boundaries.top,\n    };\n  }\n\n  onClickBrush(event) {\n    const isActive = event.currentTarget.classList.contains(\"active\");\n    // brush div 안에 i 태그가 눌릴 수 있으니까 currentTarget으로 찾기.\n    this.MODE = isActive ? \"NONE\" : \"BRUSH\";\n    this.canvasEl.style.cursor = isActive ? \"default\" : \"crosshair\";\n    this.brushPannelEl.classList.toggle(\"hide\");\n    event.currentTarget.classList.toggle(\"active\");\n    this.eraserEl.classList.remove(\"active\");\n  }\n}\n\nnew DrawingBoard();\n"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}