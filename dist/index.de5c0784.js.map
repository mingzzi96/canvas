{"mappings":"AAAA,QAAQ,IAAI;AACZ,MAAM;IACJ,OAAO,OAAO;IACd,cAAc,MAAM;IACpB,aAAc;QACZ,IAAI,CAAC;QACL,IAAI,CAAC;QACL,IAAI,CAAC;IACP;IAEA,gBAAgB;QACd,IAAI,CAAC,cAAc,SAAS,eAAe;QAC3C,IAAI,CAAC,WAAW,IAAI,CAAC,YAAY,cAAc;QAC/C,IAAI,CAAC,YAAY,IAAI,CAAC,YAAY,cAAc;QAChD,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,cAAc;IAC9C;IAEA,cAAc;QACZ,IAAI,CAAC,UAAU,IAAI,CAAC,SAAS,WAAW;IAC1C;IAEA,WAAW;QACT,IAAI,CAAC,QAAQ,iBAAiB,SAAS,IAAI,CAAC,aAAa,KAAK,IAAI;QAClE,IAAI,CAAC,SAAS,iBAAiB,aAAa,IAAI,CAAC,YAAY,KAAK,IAAI;IACxE;IAEA,YAAY,KAAK,EAAE;QACjB,IAAI,IAAI,CAAC,SAAS,QAAQ;QAC1B,IAAI,CAAC,cAAc;QACnB,MAAM,kBAAkB,IAAI,CAAC,iBAAiB;QAC9C,IAAI,CAAC,QAAQ;QACb,IAAI,CAAC,QAAQ,OAAO,gBAAgB,GAAG,gBAAgB;QACvD,IAAI,CAAC,QAAQ,UAAU;QACvB,IAAI,CAAC,QAAQ,cAAc;QAC3B,IAAI,CAAC,QAAQ,YAAY;IACzB,iCAAiC;IACjC,yBAAyB;IAC3B;IAEA,iBAAiB,KAAK,EAAE;QACtB,MAAM,aAAa,IAAI,CAAC,SAAS;QACjC,OAAO;YACL,GAAG,MAAM,UAAU,WAAW;YAC9B,GAAG,MAAM,UAAU,WAAW;QAChC;IACF;IAEA,aAAa,KAAK,EAAE;QAClB,MAAM,WAAW,MAAM,cAAc,UAAU,SAAS;QACxD,mDAAmD;QACnD,IAAI,CAAC,OAAO,WAAW,SAAS;QAChC,IAAI,CAAC,SAAS,MAAM,SAAS,WAAW,YAAY;QACpD,IAAI,CAAC,QAAQ,UAAU,OAAO;IAChC;AACF;AAEA,IAAI","sources":["src/js/index.js"],"sourcesContent":["console.log(\"hi\");\nclass DrawingBoard {\n  MODE = \"NONE\"; // NONE BRUSH EARASER\n  isMouseDown = false;\n  constructor() {\n    this.assignElement();\n    this.initContext();\n    this.addEvent();\n  }\n\n  assignElement() {\n    this.containerEl = document.getElementById(\"container\");\n    this.canvasEl = this.containerEl.querySelector(\"#canvas\");\n    this.toolbarEl = this.containerEl.querySelector(\"#toolbar\");\n    this.brushEl = this.toolbarEl.querySelector(\"#brush\");\n  }\n\n  initContext() {\n    this.context = this.canvasEl.getContext(\"2d\");\n  }\n\n  addEvent() {\n    this.brushEl.addEventListener(\"click\", this.onClickBrush.bind(this));\n    this.canvasEl.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\n  }\n\n  onMouseDown(event) {\n    if (this.MODE === \"NONE\") return;\n    this.isMouseDown = true;\n    const currentPosition = this.getMousePosition(event);\n    this.context.beginPath();\n    this.context.moveTo(currentPosition.x, currentPosition.y);\n    this.context.lineCap = \"round\";\n    this.context.strokeStyle = \"#000000\";\n    this.context.lineWidth = 10;\n    // this.context.lineTo(400, 400);\n    // this.context.stroke();\n  }\n\n  getMousePosition(event) {\n    const boundaries = this.canvasEl.getBoundingClientRect();\n    return {\n      x: event.clientX - boundaries.left,\n      y: event.clientY - boundaries.top,\n    };\n  }\n\n  onClickBrush(event) {\n    const isActive = event.currentTarget.classList.contains(\"active\");\n    // brush div 안에 i 태그가 눌릴 수 있으니까 currentTarget으로 찾기.\n    this.MODE = isActive ? \"NONE\" : \"BRUSH\";\n    this.canvasEl.style.cursor = isActive ? \"default\" : \"crosshair\";\n    this.brushEl.classList.toggle(\"active\");\n  }\n}\n\nnew DrawingBoard();\n"],"names":[],"version":3,"file":"index.de5c0784.js.map","sourceRoot":"/__parcel_source_root/"}